<?php

/**
 * Implements hook_menu().
 */
function oa_onboard_menu() {
  $items = array();
  $items['apply'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('oa_onboard_form'),
    'access arguments' => array('access content'),
    'title' => 'Submit Resume',
  );
  $items['apply/dupecheck'] = array(
    'title' => 'Duplicate Email check',
    'page callback' => 'oa_onboard_dupecheck',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Form callback for onboarding form
 */
function oa_onboard_form($form_state) {
  include_once('oa_portal.fields.inc');
  $path = drupal_get_path('module', 'oa_onboard');
  drupal_add_css($path . '/css/onboard.css');
  drupal_add_js($path . '/js/onboard.js');

  $form = array();
  $form['#attributes'] = array('enctype' => "multipart/form-data");

  if ($_GET['id']) {
    $form['id'] = array(
      '#type' => 'hidden',
      '#value' => $_GET['id'],
    );
    $form['applying-for'] = array(
      '#type' => 'markup',
      '#value' => t('Applying for Job ID ' . $_GET['id']),
    );
  }
  $form['Candidates'] = array(
    // '#tree' => TRUE,
  );
  // Email Address: <fill-in>
  $form['Candidates']['Email'] = array(
    '#type' => 'textfield',
    '#title' => 'Email',
    '#required' => TRUE,
  );
  $form['Candidates']['Email_dupe'] = array(
    '#value' => '<div id="email-address-is-dupe" class="set-hide">Your profile already exists.</div>',
  );
  $form['Candidates']['Email_confirm'] = array(
    '#type' => 'textfield',
    '#title' => 'Email Confirmation',
    '#required' => TRUE,
  );
  
  $form['Candidates']['FirstName'] = array(
    '#type' => 'textfield',
    '#title' => 'First Name',
    '#required' => TRUE,
    '#size' => 20,
  );
  $form['Candidates']['MiddleName'] = array(
    '#type' => 'textfield',
    '#title' => 'Middle Initial',
    '#size' => 3,
  );
  
  $form['Candidates']['LastName'] = array(
    '#type' => 'textfield',
    '#title' => 'Last Name',
    '#required' => TRUE,
    '#size' => 20,
  );
  
  $form['Candidates']['PostalAddress'] = address();

  $form['Phone'] = phone('Primary Phone');
  $form['CellPhone'] = phone('Cell Phone');
  $form['CellPhone']['#required'] = FALSE;

  $form['Specialty'] = select('Specialty', 
    array(
      'Environmental Experience',
      'Organic Chemistry Techniques',
      'Clinical Specialty',
      'Medical Device Experience',
      'Clinical Technique',
      'Quality',
      'Animal Experience',
      'Biochemistry Techniques',
      'Microbiology Techniques',
      'Clinical Experience',
      'Food and Fragrance Experience',
      'Physical Testing Techniques',
      'Regulatory Affairs',
      'Material Science Experience',
      'Computer Skills',
      'Molecular Biology Techniques',
      'General Chemistry Techniques',
      'Clinical Instrumentation',
      'Instrumentation',
      'Manufacturing Experience',
      'Histology Experience',
      'Formulations',
    )
  );

  $form['DateAvailable'] = date_popup('Date Available');

  $form['Referral'] = array(
    '#type' => 'select',
    '#title' => t('Were you referred?'),
    '#options' => array('none' => t('- Select -')) + drupal_map_assoc(array('Yes', 'No')),
    '#required' => TRUE,
  );

  $form['resume_file'] = array(
    '#type' => 'file',
    '#title' => t('Resume Upload'),
  );

  $form['terms'] = array(
    '#value' => '<div class="oa-terms-field">On Assignment* ("Company") is an Equal Opportunity Employer. All applicants are considered for employment regardless of age, race, gender, religion, national origin, disability, marital status or any other factor prohibited by law.</div>',
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

/**
 * Form validation callback for onboarding form
 */
function oa_onboard_form_validate($form, &$form_state) {
  // Dupe check email address

}

/**
 * Form submission callback for onboarding form
 */
function oa_onboard_form_submit($form, &$form_state) {
  $params = $form_state['values'];

  // RMax expecting: Address1, Address2, City, State, PostalCode
  $params['Address1'] = $params['PostalAddress']['address1'];
  $params['Address2'] = $params['PostalAddress']['address1'];
  $params['City'] = $params['PostalAddress']['city'];
  $params['State'] = $params['PostalAddress']['state'];
  $params['PostalCode'] = $params['PostalAddress']['postalcode'];
  unset($params['PostalAddress']);
  
  // @TODO Unset other stuff
  
  dsm($params, 'Check address is all there');

  // What is OfficeID?
  $params['OfficeID'] = 1057;

  $result = oa_portal_soap('save', array('candidateJSON' => json_encode($params)), TRUE);
  
  // if ($result->oacheckinResult->StatusInfo->statusCode === 0) {
  //   drupal_set_message(t('Your file upload was successful.'));
  // }
  // else {
  //   drupal_set_message(t('An error occured. Please try again.'));
  // }
  
  
  // Resume file upload
  if (isset($_FILES['files']) && is_uploaded_file($_FILES['files']['tmp_name']['resume_file'])) {
    $filepath = $_FILES['files']['tmp_name']['resume_file'];
    $filesize = $_FILES['files']['size']['resume_file'];
    $filename = $_FILES['files']['name']['resume_file'];
    $handle = fopen($filepath, "r");
    $contents = fread($handle, $filesize);
    fclose($handle);

    $params = array(
      // 'dDocName' => ($form_state['values']['lc']['lc_licensure'] == 61) ? '' : $account->rmaxid .'_'. $form_state['values']['lc']['lc_licensure'],
      'dDocTitle' => '9999999 - '. $rmaxid,
      'dDocType' => 'Rmax',
      'dDocAuthor' => 'weblogic',
      'dSecurityGroup' => 'Form',
      'dDocAccount' => 'Recruit/QA',
      'xContentType' => 'Form',
      'xFormType' => 999999999,
      'xRM_ID' => $rmaxid,
      'xStatus' => 'Pending Review',
      'xComments' => '',
      'xRejectReason' => '',
      'xRejectOther' => '',
      'xSuccessAudit' => '',
    );
    $params['primaryFile'] = array(
      'fileName'=> $_FILES['files']['name']['resume_file'],
      'fileContent' => $contents,
    );
    $result = oa_portal_soap('oacheckin', $params);
    if ($result->oacheckinResult->StatusInfo->statusCode === 0) {
      drupal_set_message(t('Your file upload was successful.'));
    }
    else {
      drupal_set_message(t('An error occured. Please try again.'));
    }
  }
  
}

/**
 * Dupe Check menu callback.
 */
function oa_onboard_dupecheck() {
  $Email = $_POST['email'];

  if (!valid_email_address($Email)) {
    drupal_json(array('status' => 'invalid'));
    exit();
  }

  $params = array('Email' => $Email);
  $result = oa_onboard_soap('check', $params, TRUE);
  watchdog('oaonboard', 'Dupe checked email: '. $Email .'. Duplicate? Y/N');
  watchdog('oaonboard', 'Dupe checked result: <pre>'. print_r($result, TRUE) .'</pre>');

  // $result-> === 0 means no dupe
  drupal_json(array('status' => (TRUE) ? 'no-dupe' : 'dupe'));
  exit();
}

/**
 * SOAP interface
 */
function oa_onboard_soap($method, $params, $debug = FALSE) {
  // ini_set("soap.wsdl_cache_enabled", "0");
  $wsdl = array(
    'check' => 'http://rmdev-630.rmaxut.oaifield.onasgn.com/com/recruitmax/webservices/candidateLS/candidateGatewayUS.cfc?wsdl',
    'save' => 'http://rmdms/com/recruitmax/webservices/candidateHC/candidateGateway.cfc?wsdl',
  );
  ini_set('display_errors', 1);

  $soap_params = array(
    // 'login' => 'weblogic',
    // 'password' => '0ATraining',
    'trace' => 1,
  );
  ini_set('default_socket_timeout', 10);

  try {
    $client = @new SoapClient($wsdl, $soap_params);
    $response = $client->{$method}($params);
  }
  catch(SoapFault $e){
    // handle issues returned by the web service
    if (!$debug) {
      oa_portal_503($e);
    }
  }
  catch(Exception $e){
    // handle PHP issues with the request
    if (!$debug) {
      oa_portal_500($e);
    }
  }

  if ($debug) {
    dsm($params, $method . ' $params');
    dsm($client, $method . ' $client');
    dsm($response, $method . ' $response');
  }

  return $response;
}
