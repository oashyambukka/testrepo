<?php

include_once('oa_portal.forms.inc');

/* MS: Added to apply CSS & JS */
function oa_portal_init() {
	drupal_add_css(drupal_get_path('module', 'oa_portal') . '/css/forms.css');
	//drupal_add_js(drupal_get_path('module', 'oa_portal') . '/js/forms.js');
}


/**
 * Implements hook_menu().
 */
function oa_portal_menu() {
  $items = array();
  
  $items['admin/portal'] = array(
    'title' => 'OA Portal Admin', 
    'page callback' => 'oa_portal_admin', 
    'access arguments' => array('administer site configuration'), 
  );
  
  $p = oa_portal_api();
  foreach ($p AS $pk => $phase) {
    foreach ($phase AS $sk => $section) {
      if (substr($sk, 0, 1) !== '#') {
        $items[$pk .'/'. $sk] = array(
          'type' => MENU_CALLBACK,
          'title' => $section['#title'],
          'page callback' => 'drupal_get_form',
          'page arguments' => array('oa_portal_'. $pk .'_'. $sk .'_form'),
          'access callback' => 'oa_portal_access',
          'access arguments' => array($pk, $sk),
        );
      }
    }
  }

  return $items;
}

/**
 * Access callback for menu items
 */
function oa_portal_access($phase, $section) {
  global $user;
return TRUE;
  // Load portal data for user
  
  $p = oa_portal_api();
  // Acceptable s
  // Check if phase is unlocked
  if (in_array($p[$phase]['#status'], array('', 'open'))) {
    // Check if section has not yet been finalized
    if (in_array($p[$phase][$section]['#status'], array('', 'rejected'))) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Menu callback for admin page
 */
function oa_portal_admin() {
//  oa_portal_soap_ping_server();
  $output = drupal_get_form('oa_portal_soap_file_form');
  
  $p = oa_portal_api();
  foreach ($p AS $pk => $phase) {
    $output .= '<h3>'. $phase['#title'] .'</h3>';
    $rows = array();
    foreach ($phase AS $sk => $section) {
      if (substr($sk, 0, 1) !== '#') {
        $rows[] = array(l($section['#title'], $pk .'/'. $sk), 'oa_portal_'. $pk .'_'. $sk .'_form', function_exists('oa_portal_'. $pk .'_'. $sk .'_form'), function_exists('oa_portal_'. $pk .'_'. $sk .'_form_validate'), function_exists('oa_portal_'. $pk .'_'. $sk .'_form_submit'));
       if (!function_exists('oa_portal_'. $pk .'_'. $sk .'_form')) {
         $code .= '/**
 * Form callback for '. $section['#title'] .'
 */
/*
function oa_portal_'. $pk .'_'. $sk .'_form($form_state) {
  $form = array();
  $form[\'#description\'] = t(\'\');
  
  // 
  $form[\'\'] = fieldset(\'\');
  $form[\'\'][\'\'] = textfield(\'\');
  $form[\'\'][\'\'] = textarea(\'\');
  $form[\'\'][\'\'] = array(
    \'#type\' => \'\',
    \'#title\' => t(\'\'),
    \'#options\' => array(\'opt1\' => \'Opt 1\'),
    \'#required\' => TRUE,
  );

  oa_portal_submit(&$form);
  return $form;
}
*/';
         $code .= '/**
 * Form validation callback for '. $section['#title'] .'
 */
/*
function oa_portal_'. $pk .'_'. $sk .'_form_validate($form, &$form_state) {
  if ($form_state[\'values\'][\'name\'] == \'\') {
    form_set_error(\'\', t(\'You must select a name for this group of settings.\'));
  }
}
*/

';

         $code .= '/**
 * Form submission callback for '. $section['#title'] .'
 */
/*
function oa_portal_'. $pk .'_'. $sk .'_form_submit($form, &$form_state) {

}
*/
';
        }

      }
    }
    $output .= theme('table', array('Section', 'Form callback', 'form', 'validation', 'submission'), $rows);
  }

  $output .= '<pre>'. $code .'</pre>';
  return $output;
}

/**
 * 
 */
function oa_portal_api() {
  $p = array();
  $p['p1'] = array(
    '#title' => t('Phase 1'),
    '#status' => '',
    'contact' => array(
      '#title' => t('Contact Information'),
      '#dependencies' => array(),
      '#status' => 'closed',
      '#data' => array(),
      '#docs' => array(),
    ),
    'application' => array(
      '#title' => t('Application'),
      '#dependencies' => array(),
      '#status' => 'open',
      '#data' => array(),
      '#docs' => array(),
    ),
    'checklist' => array(
      '#title' => t('Checklist'),
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
  );
  $p['p2'] = array(
    '#title' => t('Phase 2'),
    '#status' => '',
    'professional_orgs' => array(
      '#title' => t('Professional Organizations'),
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
    'licensure_certs' => array(
      '#title' => t('Licensure Certifications'),
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
    'background_reference' => array(
      '#title' => t('Background/Reference Check'),
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
    'capabilities' => array(
      '#title' => t('Capabilities Questionnaire'),
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
    'policies' => array(
      '#title' => t('Policies & Agreements'),
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
    'medical' => array(
      '#title' => t('Medical Authorization and Disclosures'),
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
    'competency' => array(
      '#title' => t('Competency Test'),
      '#status' => '',
    ),
  );
  $p['p3'] = array(
    '#title' => t('Phase 3'),
    '#status' => '',
    'paycheque' => array(
      '#title' => t('Paycheque Method'),
      '#phase' => 3,
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
    'w4' => array(
      '#title' => t('W4'),
      '#phase' => 3,
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
    'i9' => array(
      '#title' => t('I-9'),
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
    'eeo' => array(
      '#title' => t('EEO Form'),
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
    'work_policy' => array(
      '#title' => t('Work Policy'),
      '#dependencies' => array(),
      '#status' => '',
      '#data' => array(),
      '#docs' => array(),
    ),
  );
  return $p;
}

/**
 * SOAP interface
 */
function oa_portal_soap($method, $params) {
  ini_set('display_errors', 1);
  require_once dirname(__FILE__) . '../soapclient/modules/soapclient/nusoap/nusoap.php');
  $wsdl = dirname(__FILE__) .'/wsdl/ping.wsdl';
  $client = new nusoap_client($wsdl, 'wsdl');
  $client->decode_utf8 = false;
  $client->xml_encoding = 'UTF-8';
  $client->soap_defencoding = 'UTF-8';
  $client->setCredentials('weblogic', '0ATraining');
  $err = $client->getError();
  if ($err) {
    dsm($err, 'SOAP Client Error');
  }

  $result = $client->call($method, $params);
  // if ($client->error_str) {
  //   dsm($client->error_str, 'SOAP Error');
  // }

  dsm($result, 'Results');
  return $result;
}

/**
 * Test ping server
 */
function oa_portal_soap_ping_server() {
  $results = oa_portal_soap('pingServer', array());
  
  if (is_array($results)) {
    dsm($results, 'SOAP $results');
    return $results;
  }
  return array();
}

function oa_portal_soap_file_form($form_state) {
  $form['#attributes'] = array('enctype' => "multipart/form-data");
  $form['upload'] = array(
    '#type' => 'file', 
    '#title' => t('Post a file to UCM'),
    '#size' => 40,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Upload',
  );
  return $form;
}

function oa_portal_soap_file_form_submit($form, &$form_state) {
  $file = file_check_upload('upload');
  dsm($file, '$file');
/*
  $handle = fopen($file->path, "r");
  $contents = fread($handle, filesize($file->path));
  fclose($handle);
  $encoded_content = base64_encode($contents);

  $results = oa_portal_soap('CheckInUniversal', array($file->filename, $encoded_content));
  
  if (is_array($results)) {
    dsm($results, 'SOAP $results for file upload');
  }
  */
}